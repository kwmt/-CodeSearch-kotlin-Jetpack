version: 2

jobs:
  build:
    docker:
      - image: circleci/android:api-27-alpha
        environment:
          JAVA_OPTS: -Xmx1536m
          GRADLE_OPTS: '-Dorg.gradle.daemon=false -Dorg.gradle.jvmargs="-Xmx1536m -XX:+HeapDumpOnOutOfMemoryError"'
    steps:
      - checkout
      - restore_cache:
          key: sdks-licenses-build-tools-extras-{{ checksum "build.gradle" }}-{{ checksum "app/build.gradle" }}
      - restore_cache:
          key: jars-{{ checksum "build.gradle" }}-{{ checksum "app/build.gradle" }}
      - run:
          name: Download Dependencies
          command: ./gradlew androidDependencies
      - run:
          name: Build
          command: |
              ./gradlew --stacktrace assembleStagingDebug
#              ./gradlew --stacktrace assembleProductionRelease
#      - run:
#          name: Check
#          command: |
#              ./gradlew --stacktrace lintStagingDebug
#              ./gradlew --stacktrace ktlintStagingDebugCheck
      - run:
          name: Test
          command: |
              ./gradlew --stacktrace testStagingDebug
      - store_artifacts:
          path: app/build/reports
          destination: reports
      - store_artifacts:
          path: app/build/outputs/apk
          destination: apk
      - save_cache:
          key: sdks-licenses-build-tools-extras-{{ checksum "build.gradle" }}-{{ checksum "app/build.gradle" }}
          paths:
            - /opt/android/sdk/licenses
            - /opt/android/sdk/build-tools
            - /opt/android/sdk/extras
      - save_cache:
          key: jars-{{ checksum "build.gradle" }}-{{ checksum "app/build.gradle" }}
          paths:
            - ~/.gradle

  deploy:
    docker:
      - image: circleci/android:api-27-alpha
        environment:
          JAVA_OPTS: -Xmx1536m
          GRADLE_OPTS: '-Dorg.gradle.daemon=false -Dorg.gradle.jvmargs="-Xmx1536m -XX:+HeapDumpOnOutOfMemoryError"'
    steps:
      - checkout
      - restore_cache:
          key: sdks-licenses-build-tools-extras-{{ checksum "build.gradle" }}-{{ checksum "app/build.gradle" }}
      - restore_cache:
          key: jars-{{ checksum "build.gradle" }}-{{ checksum "app/build.gradle" }}
      - run:
          name: Build
          command: |
              ./gradlew --offline --stacktrace assembleStagingDebug
      - run:
          name: Upload to DeployGate
          command: |
              ./gradlew uploadDeployGateStagingDebug -PdisablePreDex

  release:
    docker:
      - image: circleci/android:api-27-alpha
        environment:
          JAVA_OPTS: -Xmx1536m
          GRADLE_OPTS: '-Dorg.gradle.daemon=false -Dorg.gradle.jvmargs="-Xmx1536m -XX:+HeapDumpOnOutOfMemoryError"'
    steps:
      - checkout
      - restore_cache:
          key: sdks-licenses-build-tools-extras-{{ checksum "build.gradle" }}-{{ checksum "app/build.gradle" }}
      - restore_cache:
          key: jars-{{ checksum "build.gradle" }}-{{ checksum "app/build.gradle" }}
      - run:
          name: Build
          command: |
              ./gradlew --offline --stacktrace assembleProductionRelease
      - run:
          name: Upload to DeployGate
          command: |
              ./gradlew uploadDeployGateProductionRelease -PdisablePreDex

  production:
    docker:
      - image: circleci/android:api-27-alpha
        environment:
          JAVA_OPTS: -Xmx1536m
          GRADLE_OPTS: '-Dorg.gradle.daemon=false -Dorg.gradle.jvmargs="-Xmx1536m -XX:+HeapDumpOnOutOfMemoryError"'
    steps:
      - checkout
      - restore_cache:
          key: sdks-licenses-build-tools-extras-{{ checksum "build.gradle" }}-{{ checksum "app/build.gradle" }}
      - restore_cache:
          key: jars-{{ checksum "build.gradle" }}-{{ checksum "app/build.gradle" }}
      - run:
          name: Build
          command: |
              ./gradlew --offline --stacktrace assembleProductionRelease
      - run:
          name: Upload to DeployGate
          command: |
              ./gradlew publishApkProductionRelease

workflows:
  version: 2
  build_and_deploy:
    jobs:
      - build
#      - deploy:
#          requires:
#            - build
#          filters:
#            branches:
#              only:
#                - master
#      - release:
#          requires:
#            - build
#          filters:
#            branches:
#              only:
#                - release
#      - production:
#          requires:
#            - build
#          filters:
#            branches:
#              only:
#                - production
